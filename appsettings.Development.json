{
  "ConnectionStrings": {
    "DefaultConnection": "Host=ec2-3-211-86-51.compute-1.amazonaws.com;Database=db1;Username=user1;Password=password;"
  },
  "NLog": {
    "throwConfigExceptions": true,
    "internalLogLevel": "trace",
    "internalLogFile": "${currentdir}/Logs/nlog-logs.log",
    "extensions": [
      { "assembly": "NLog.Extensions.Logging" }
    ],
    "targets": {
      "async": true,
      "FileTarget": {
        "type": "File",
        "createDirs": true,
        "filename": "${currentdir}/Logs/wineapi.log",
        "archiveFileName": "${currentdir}/Logs/archives/wineapi-{#}.log.zip",
        "archiveNumbering": "Date",
        "archiveDateFormat": "yyyyMMdd",
        "archiveEvery": "Day",
        "maxArchiveFiles": "30",
        "layout": "${longdate}|${level}|${logger}|\nMESSAGE: ${message}\nURL: ${aspnet-request-url}\nHTTP_METHOD: ${aspnet-request-method}\nREQUEST_BODY: ${aspnet-request-posted-body}\nREQUEST_HOST: ${aspnet-request-host}\n\nException:${exception:innerFormat=Message,StackTrace}\n\n\n\n"

      },
      "ConsoleTarget": {
        "type": "Console"
      }
    },
    "rules": [
      // disable specific loggers
      {
        "logger": "Microsoft.AspNetCore.*",
        "minLevel": "Trace",
        "filterDefaultAction": "Neutral",
        "final": true
      },
      {
        "logger": "Microsoft.Hosting.*",
        "minLevel": "Trace",
        "filterDefaultAction": "Neutral",
        "final": true
      },
      // disable specific loggers
      {
        "logger": "StarterApi.*",
        "minLevel": "Info",
        "writeTo": "FileTarget",
        "filterDefaultAction": "Neutral"
      },
      {
        "logger": "*",
        "minLevel": "Info",
        "writeTo": "ConsoleTarget",
        "filterDefaultAction": "Neutral",
        "filters": [
          {
            "type": "when",
            "condition": "contains('${aspnet-request-posted-body}', 'password')",
            "action": "Ignore"
          }
        ]
      }
    ]
  },
  "AllowedHosts": "*",
  "DefaultSchema": "public",
  "JwtConfig": {
    "JwtCookieName": "token", // not in JwtConfig.cs
    "DefaultAuthHeader": "Authorization", // not in JwtConfig.cs
    "JwtSecret": "xhKJ6m58nIrU3soEMm8J/2RkMH2+B9Esz9T8ffRCRVFlyKzAGhdygyXQMnsSD6UXOQhGZXxM/31piB7O4DQEK738ZC5Jw8g1GIc7Y1k7wHnL9OrIKZC6FyhZnCD8LcjOsO2lHmlWSVS34NS1rpQQxh1xk87m0yVC4XbEf/MKo6wBdXyzEUXLNiBdPq/8MUA8JlTmmRdWLY5Wzi43KxWFAeR7jLxlqdi0J3QMhA==",
    "JwtMeIdentifier": "bitch",
    "jwtUsername": "blah"
  },
  "RegexConfig": {
    "PasswordStrength": "^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9]).{8,50}$"
  },
  "HttpClientConfigs": {
    "clientConfig": {
      "url": "https://url.com"
    }

  }
}

//"DbTarget": {
//  "type": "Database",
//  "dbProvider": "Microsoft.Data.SqlClient",
//  "connectionString": "${configsetting:item=ConnectionStrings.DefaultConnection}",
//  "commandText": "INSERT INTO [TestSchema].[Logs](CreatedOn,Message,Level,Exception,Logger,Url,QueryString,CallSite,Method,Body,Hostname,ClientIp) VALUES (@datetime,@msg,@level,@exception,@logger,@url,@queryString,@callSite,@method,@body,@hostname,@clientIp)",
//  "parameters": [
//    {
//      "name": "@datetime",
//      "layout": "${date:universalTime=true}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@msg",
//      "layout": "${message}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@level",
//      "layout": "${level}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@exception",
//      "layout": "${exception:format=@}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@logger",
//      "layout": "${logger}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@url",
//      "layout": "${aspnet-request-url}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@queryString",
//      "layout": "${aspnet-request-querystring}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@callSite",
//      "layout": "${callsite}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@method",
//      "layout": "${aspnet-request-method}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@body",
//      "layout": "${aspnet-request-posted-body}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@hostname",
//      "layout": "${hostname}",
//      "allowDbNull": true
//    },
//    {
//      "name": "@clientIp",
//      "layout": "${aspnet-request-ip}",
//      "allowDbNull": true
//    }
//  ]
//},

//{
//  "logger": "*",
//  "minLevel": "Warn",
//  "writeTo": "DbTarget",
//  "filterDefaultAction": "Neutral",
//  "filters": [
//    {
//      "type": "when",
//      "condition": "contains('${aspnet-request-posted-body}', 'password')",
//      "action": "Ignore"
//    }
//  ]
//},
